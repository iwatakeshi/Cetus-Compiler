Grammar

    0 $accept: program $end

    1 program: proc

    2 proc: K_PROC ID PAREN_L params PAREN_R K_RETURN type proc_block proc
    3     | /* empty */

    4 type: T_BOOL
    5     | T_INT
    6     | T_CHAR
    7     | T_STR
    8     | T_CHARP
    9     | T_INTP

   10 params: ID more_params COLON type
   11       | /* empty */

   12 more_params: COMMA ID more_params
   13            | /* empty */

   14 proc_block: CURLY_L proc decls stats return_stat CURLY_R

   15 decls: decl SEMICOLON decls
   16      | /* empty */

   17 stats: stat SEMICOLON stats
   18      | /* empty */

   19 return_stat: K_RETURN expr SEMICOLON

   20 decl: K_VAR vars ID COLON type
   21     | K_VAR vars ID COLON T_STR SQR_L expr SQR_R

   22 vars: vars COMMA ID
   23     | /* empty */

   24 stat: lhs O_ASSIGN expr
   25     | lhs O_ASSIGN ID PAREN_L args PAREN_R
   26     | K_IF PAREN_L expr PAREN_R nest_block
   27     | K_IF PAREN_L expr PAREN_R nest_block K_ELSE nest_block
   28     | K_WHILE PAREN_L expr PAREN_R nest_block
   29     | nest_block

   30 lhs: ID
   31    | ID SQR_L expr SQR_R
   32    | O_DEREF ID

   33 args: expr more_args
   34     | /* empty */

   35 more_args: COMMA expr more_args
   36          | /* empty */

   37 nest_block: CURLY_L decls stats CURLY_R

   38 expr: PAREN_L expr PAREN_R
   39     | expr O_OR expr
   40     | expr O_AND expr
   41     | expr O_EQUAL expr
   42     | expr O_NEQUAL expr
   43     | expr O_SUBTRACT expr
   44     | expr O_ADD expr
   45     | expr O_MULTIPLY expr
   46     | expr O_DIVIDE expr
   47     | expr O_GT expr
   48     | expr O_GTE expr
   49     | expr O_LT expr
   50     | expr O_LTE expr
   51     | O_NOT expr
   52     | O_ADDRESS lhs
   53     | O_DEREF PAREN_L expr PAREN_R
   54     | K_NULL
   55     | ID
   56     | abs
   57     | L_INT
   58     | L_CHAR
   59     | L_BOOL
   60     | L_STRING

   61 abs: PIPE expr PIPE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_BOOL (258) 4
T_CHAR (259) 6
T_INT (260) 5
T_STR (261) 7 21
T_INTP (262) 9
T_CHARP (263) 8
K_IF (264) 26 27
K_ELSE (265) 27
K_WHILE (266) 28
K_VAR (267) 20 21
K_PROC (268) 2
K_RETURN (269) 2 19
K_NULL (270) 54
O_AND (271) 40
O_DIVIDE (272) 46
O_ASSIGN (273) 24 25
O_EQUAL (274) 41
O_GT (275) 47
O_GTE (276) 48
O_LT (277) 49
O_LTE (278) 50
O_SUBTRACT (279) 43
O_NOT (280) 51
O_NEQUAL (281) 42
O_OR (282) 39
O_ADD (283) 44
O_MULTIPLY (284) 45
O_ADDRESS (285) 52
O_DEREF (286) 32 53
L_BOOL (287) 59
L_CHAR (288) 58
L_INT (289) 57
L_STRING (290) 60
ID (291) 2 10 12 20 21 22 25 30 31 32 55
SEMICOLON (292) 15 17 19
COLON (293) 10 20 21
COMMA (294) 12 22 35
PIPE (295) 61
CURLY_L (296) 14 37
CURLY_R (297) 14 37
PAREN_L (298) 2 25 26 27 28 38 53
PAREN_R (299) 2 25 26 27 28 38 53
SQR_L (300) 21 31
SQR_R (301) 21 31


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
proc (49)
    on left: 2 3, on right: 1 2 14
type (50)
    on left: 4 5 6 7 8 9, on right: 2 10 20
params (51)
    on left: 10 11, on right: 2
more_params (52)
    on left: 12 13, on right: 10 12
proc_block (53)
    on left: 14, on right: 2
decls (54)
    on left: 15 16, on right: 14 15 37
stats (55)
    on left: 17 18, on right: 14 17 37
return_stat (56)
    on left: 19, on right: 14
decl (57)
    on left: 20 21, on right: 15
vars (58)
    on left: 22 23, on right: 20 21 22
stat (59)
    on left: 24 25 26 27 28 29, on right: 17
lhs (60)
    on left: 30 31 32, on right: 24 25 52
args (61)
    on left: 33 34, on right: 25
more_args (62)
    on left: 35 36, on right: 33 35
nest_block (63)
    on left: 37, on right: 26 27 28 29
expr (64)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58 59 60, on right: 19 21 24 26 27 28 31 33 35 38 39 40 41
    42 43 44 45 46 47 48 49 50 51 53 61
abs (65)
    on left: 61, on right: 56


state 0

    0 $accept: . program $end

    K_PROC  shift, and go to state 1

    $default  reduce using rule 3 (proc)

    program  go to state 2
    proc     go to state 3


state 1

    2 proc: K_PROC . ID PAREN_L params PAREN_R K_RETURN type proc_block proc

    ID  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: proc .

    $default  reduce using rule 1 (program)


state 4

    2 proc: K_PROC ID . PAREN_L params PAREN_R K_RETURN type proc_block proc

    PAREN_L  shift, and go to state 6


state 5

    0 $accept: program $end .

    $default  accept


state 6

    2 proc: K_PROC ID PAREN_L . params PAREN_R K_RETURN type proc_block proc

    ID  shift, and go to state 7

    $default  reduce using rule 11 (params)

    params  go to state 8


state 7

   10 params: ID . more_params COLON type

    COMMA  shift, and go to state 9

    $default  reduce using rule 13 (more_params)

    more_params  go to state 10


state 8

    2 proc: K_PROC ID PAREN_L params . PAREN_R K_RETURN type proc_block proc

    PAREN_R  shift, and go to state 11


state 9

   12 more_params: COMMA . ID more_params

    ID  shift, and go to state 12


state 10

   10 params: ID more_params . COLON type

    COLON  shift, and go to state 13


state 11

    2 proc: K_PROC ID PAREN_L params PAREN_R . K_RETURN type proc_block proc

    K_RETURN  shift, and go to state 14


state 12

   12 more_params: COMMA ID . more_params

    COMMA  shift, and go to state 9

    $default  reduce using rule 13 (more_params)

    more_params  go to state 15


state 13

   10 params: ID more_params COLON . type

    T_BOOL   shift, and go to state 16
    T_CHAR   shift, and go to state 17
    T_INT    shift, and go to state 18
    T_STR    shift, and go to state 19
    T_INTP   shift, and go to state 20
    T_CHARP  shift, and go to state 21

    type  go to state 22


state 14

    2 proc: K_PROC ID PAREN_L params PAREN_R K_RETURN . type proc_block proc

    T_BOOL   shift, and go to state 16
    T_CHAR   shift, and go to state 17
    T_INT    shift, and go to state 18
    T_STR    shift, and go to state 19
    T_INTP   shift, and go to state 20
    T_CHARP  shift, and go to state 21

    type  go to state 23


state 15

   12 more_params: COMMA ID more_params .

    $default  reduce using rule 12 (more_params)


state 16

    4 type: T_BOOL .

    $default  reduce using rule 4 (type)


state 17

    6 type: T_CHAR .

    $default  reduce using rule 6 (type)


state 18

    5 type: T_INT .

    $default  reduce using rule 5 (type)


state 19

    7 type: T_STR .

    $default  reduce using rule 7 (type)


state 20

    9 type: T_INTP .

    $default  reduce using rule 9 (type)


state 21

    8 type: T_CHARP .

    $default  reduce using rule 8 (type)


state 22

   10 params: ID more_params COLON type .

    $default  reduce using rule 10 (params)


state 23

    2 proc: K_PROC ID PAREN_L params PAREN_R K_RETURN type . proc_block proc

    CURLY_L  shift, and go to state 24

    proc_block  go to state 25


state 24

   14 proc_block: CURLY_L . proc decls stats return_stat CURLY_R

    K_PROC  shift, and go to state 1

    $default  reduce using rule 3 (proc)

    proc  go to state 26


state 25

    2 proc: K_PROC ID PAREN_L params PAREN_R K_RETURN type proc_block . proc

    K_PROC  shift, and go to state 1

    $default  reduce using rule 3 (proc)

    proc  go to state 27


state 26

   14 proc_block: CURLY_L proc . decls stats return_stat CURLY_R

    K_VAR  shift, and go to state 28

    $default  reduce using rule 16 (decls)

    decls  go to state 29
    decl   go to state 30


state 27

    2 proc: K_PROC ID PAREN_L params PAREN_R K_RETURN type proc_block proc .

    $default  reduce using rule 2 (proc)


state 28

   20 decl: K_VAR . vars ID COLON type
   21     | K_VAR . vars ID COLON T_STR SQR_L expr SQR_R

    $default  reduce using rule 23 (vars)

    vars  go to state 31


state 29

   14 proc_block: CURLY_L proc decls . stats return_stat CURLY_R

    K_IF     shift, and go to state 32
    K_WHILE  shift, and go to state 33
    O_DEREF  shift, and go to state 34
    ID       shift, and go to state 35
    CURLY_L  shift, and go to state 36

    $default  reduce using rule 18 (stats)

    stats       go to state 37
    stat        go to state 38
    lhs         go to state 39
    nest_block  go to state 40


state 30

   15 decls: decl . SEMICOLON decls

    SEMICOLON  shift, and go to state 41


state 31

   20 decl: K_VAR vars . ID COLON type
   21     | K_VAR vars . ID COLON T_STR SQR_L expr SQR_R
   22 vars: vars . COMMA ID

    ID     shift, and go to state 42
    COMMA  shift, and go to state 43


state 32

   26 stat: K_IF . PAREN_L expr PAREN_R nest_block
   27     | K_IF . PAREN_L expr PAREN_R nest_block K_ELSE nest_block

    PAREN_L  shift, and go to state 44


state 33

   28 stat: K_WHILE . PAREN_L expr PAREN_R nest_block

    PAREN_L  shift, and go to state 45


state 34

   32 lhs: O_DEREF . ID

    ID  shift, and go to state 46


state 35

   30 lhs: ID .
   31    | ID . SQR_L expr SQR_R

    SQR_L  shift, and go to state 47

    $default  reduce using rule 30 (lhs)


state 36

   37 nest_block: CURLY_L . decls stats CURLY_R

    K_VAR  shift, and go to state 28

    $default  reduce using rule 16 (decls)

    decls  go to state 48
    decl   go to state 30


state 37

   14 proc_block: CURLY_L proc decls stats . return_stat CURLY_R

    K_RETURN  shift, and go to state 49

    return_stat  go to state 50


state 38

   17 stats: stat . SEMICOLON stats

    SEMICOLON  shift, and go to state 51


state 39

   24 stat: lhs . O_ASSIGN expr
   25     | lhs . O_ASSIGN ID PAREN_L args PAREN_R

    O_ASSIGN  shift, and go to state 52


state 40

   29 stat: nest_block .

    $default  reduce using rule 29 (stat)


state 41

   15 decls: decl SEMICOLON . decls

    K_VAR  shift, and go to state 28

    $default  reduce using rule 16 (decls)

    decls  go to state 53
    decl   go to state 30


state 42

   20 decl: K_VAR vars ID . COLON type
   21     | K_VAR vars ID . COLON T_STR SQR_L expr SQR_R

    COLON  shift, and go to state 54


state 43

   22 vars: vars COMMA . ID

    ID  shift, and go to state 55


state 44

   26 stat: K_IF PAREN_L . expr PAREN_R nest_block
   27     | K_IF PAREN_L . expr PAREN_R nest_block K_ELSE nest_block

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 67
    abs   go to state 68


state 45

   28 stat: K_WHILE PAREN_L . expr PAREN_R nest_block

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 69
    abs   go to state 68


state 46

   32 lhs: O_DEREF ID .

    $default  reduce using rule 32 (lhs)


state 47

   31 lhs: ID SQR_L . expr SQR_R

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 70
    abs   go to state 68


state 48

   37 nest_block: CURLY_L decls . stats CURLY_R

    K_IF     shift, and go to state 32
    K_WHILE  shift, and go to state 33
    O_DEREF  shift, and go to state 34
    ID       shift, and go to state 35
    CURLY_L  shift, and go to state 36

    $default  reduce using rule 18 (stats)

    stats       go to state 71
    stat        go to state 38
    lhs         go to state 39
    nest_block  go to state 40


state 49

   19 return_stat: K_RETURN . expr SEMICOLON

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 72
    abs   go to state 68


state 50

   14 proc_block: CURLY_L proc decls stats return_stat . CURLY_R

    CURLY_R  shift, and go to state 73


state 51

   17 stats: stat SEMICOLON . stats

    K_IF     shift, and go to state 32
    K_WHILE  shift, and go to state 33
    O_DEREF  shift, and go to state 34
    ID       shift, and go to state 35
    CURLY_L  shift, and go to state 36

    $default  reduce using rule 18 (stats)

    stats       go to state 74
    stat        go to state 38
    lhs         go to state 39
    nest_block  go to state 40


state 52

   24 stat: lhs O_ASSIGN . expr
   25     | lhs O_ASSIGN . ID PAREN_L args PAREN_R

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 75
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 76
    abs   go to state 68


state 53

   15 decls: decl SEMICOLON decls .

    $default  reduce using rule 15 (decls)


state 54

   20 decl: K_VAR vars ID COLON . type
   21     | K_VAR vars ID COLON . T_STR SQR_L expr SQR_R

    T_BOOL   shift, and go to state 16
    T_CHAR   shift, and go to state 17
    T_INT    shift, and go to state 18
    T_STR    shift, and go to state 77
    T_INTP   shift, and go to state 20
    T_CHARP  shift, and go to state 21

    type  go to state 78


state 55

   22 vars: vars COMMA ID .

    $default  reduce using rule 22 (vars)


state 56

   54 expr: K_NULL .

    $default  reduce using rule 54 (expr)


state 57

   51 expr: O_NOT . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 79
    abs   go to state 68


state 58

   52 expr: O_ADDRESS . lhs

    O_DEREF  shift, and go to state 34
    ID       shift, and go to state 35

    lhs  go to state 80


state 59

   53 expr: O_DEREF . PAREN_L expr PAREN_R

    PAREN_L  shift, and go to state 81


state 60

   59 expr: L_BOOL .

    $default  reduce using rule 59 (expr)


state 61

   58 expr: L_CHAR .

    $default  reduce using rule 58 (expr)


state 62

   57 expr: L_INT .

    $default  reduce using rule 57 (expr)


state 63

   60 expr: L_STRING .

    $default  reduce using rule 60 (expr)


state 64

   55 expr: ID .

    $default  reduce using rule 55 (expr)


state 65

   61 abs: PIPE . expr PIPE

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 82
    abs   go to state 68


state 66

   38 expr: PAREN_L . expr PAREN_R

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 83
    abs   go to state 68


state 67

   26 stat: K_IF PAREN_L expr . PAREN_R nest_block
   27     | K_IF PAREN_L expr . PAREN_R nest_block K_ELSE nest_block
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    PAREN_R     shift, and go to state 96


state 68

   56 expr: abs .

    $default  reduce using rule 56 (expr)


state 69

   28 stat: K_WHILE PAREN_L expr . PAREN_R nest_block
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    PAREN_R     shift, and go to state 97


state 70

   31 lhs: ID SQR_L expr . SQR_R
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    SQR_R       shift, and go to state 98


state 71

   37 nest_block: CURLY_L decls stats . CURLY_R

    CURLY_R  shift, and go to state 99


state 72

   19 return_stat: K_RETURN expr . SEMICOLON
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    SEMICOLON   shift, and go to state 100


state 73

   14 proc_block: CURLY_L proc decls stats return_stat CURLY_R .

    $default  reduce using rule 14 (proc_block)


state 74

   17 stats: stat SEMICOLON stats .

    $default  reduce using rule 17 (stats)


state 75

   25 stat: lhs O_ASSIGN ID . PAREN_L args PAREN_R
   55 expr: ID .

    PAREN_L  shift, and go to state 101

    $default  reduce using rule 55 (expr)


state 76

   24 stat: lhs O_ASSIGN expr .
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 24 (stat)


state 77

    7 type: T_STR .
   21 decl: K_VAR vars ID COLON T_STR . SQR_L expr SQR_R

    SQR_L  shift, and go to state 102

    $default  reduce using rule 7 (type)


state 78

   20 decl: K_VAR vars ID COLON type .

    $default  reduce using rule 20 (decl)


state 79

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr
   51     | O_NOT expr .

    $default  reduce using rule 51 (expr)


state 80

   52 expr: O_ADDRESS lhs .

    $default  reduce using rule 52 (expr)


state 81

   53 expr: O_DEREF PAREN_L . expr PAREN_R

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 103
    abs   go to state 68


state 82

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr
   61 abs: PIPE expr . PIPE

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    PIPE        shift, and go to state 104


state 83

   38 expr: PAREN_L expr . PAREN_R
   39     | expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    PAREN_R     shift, and go to state 105


state 84

   40 expr: expr O_AND . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 106
    abs   go to state 68


state 85

   46 expr: expr O_DIVIDE . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 107
    abs   go to state 68


state 86

   41 expr: expr O_EQUAL . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 108
    abs   go to state 68


state 87

   47 expr: expr O_GT . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 109
    abs   go to state 68


state 88

   48 expr: expr O_GTE . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 110
    abs   go to state 68


state 89

   49 expr: expr O_LT . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 111
    abs   go to state 68


state 90

   50 expr: expr O_LTE . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 112
    abs   go to state 68


state 91

   43 expr: expr O_SUBTRACT . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 113
    abs   go to state 68


state 92

   42 expr: expr O_NEQUAL . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 114
    abs   go to state 68


state 93

   39 expr: expr O_OR . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 115
    abs   go to state 68


state 94

   44 expr: expr O_ADD . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 116
    abs   go to state 68


state 95

   45 expr: expr O_MULTIPLY . expr

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 117
    abs   go to state 68


state 96

   26 stat: K_IF PAREN_L expr PAREN_R . nest_block
   27     | K_IF PAREN_L expr PAREN_R . nest_block K_ELSE nest_block

    CURLY_L  shift, and go to state 36

    nest_block  go to state 118


state 97

   28 stat: K_WHILE PAREN_L expr PAREN_R . nest_block

    CURLY_L  shift, and go to state 36

    nest_block  go to state 119


state 98

   31 lhs: ID SQR_L expr SQR_R .

    $default  reduce using rule 31 (lhs)


state 99

   37 nest_block: CURLY_L decls stats CURLY_R .

    $default  reduce using rule 37 (nest_block)


state 100

   19 return_stat: K_RETURN expr SEMICOLON .

    $default  reduce using rule 19 (return_stat)


state 101

   25 stat: lhs O_ASSIGN ID PAREN_L . args PAREN_R

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    $default  reduce using rule 34 (args)

    args  go to state 120
    expr  go to state 121
    abs   go to state 68


state 102

   21 decl: K_VAR vars ID COLON T_STR SQR_L . expr SQR_R

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 122
    abs   go to state 68


state 103

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr
   53     | O_DEREF PAREN_L expr . PAREN_R

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    PAREN_R     shift, and go to state 123


state 104

   61 abs: PIPE expr PIPE .

    $default  reduce using rule 61 (abs)


state 105

   38 expr: PAREN_L expr PAREN_R .

    $default  reduce using rule 38 (expr)


state 106

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   40     | expr O_AND expr .
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 40 (expr)


state 107

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   46     | expr O_DIVIDE expr .
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    $default  reduce using rule 46 (expr)


state 108

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   41     | expr O_EQUAL expr .
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 41 (expr)


state 109

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   47     | expr O_GT expr .
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 47 (expr)


state 110

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   48     | expr O_GTE expr .
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 48 (expr)


state 111

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   49     | expr O_LT expr .
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 49 (expr)


state 112

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr
   50     | expr O_LTE expr .

    O_DIVIDE    shift, and go to state 85
    O_SUBTRACT  shift, and go to state 91
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 50 (expr)


state 113

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   43     | expr O_SUBTRACT expr .
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 43 (expr)


state 114

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   42     | expr O_NEQUAL expr .
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 42 (expr)


state 115

   39 expr: expr . O_OR expr
   39     | expr O_OR expr .
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 39 (expr)


state 116

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   44     | expr O_ADD expr .
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_DIVIDE    shift, and go to state 85
    O_MULTIPLY  shift, and go to state 95

    $default  reduce using rule 44 (expr)


state 117

   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   45     | expr O_MULTIPLY expr .
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    $default  reduce using rule 45 (expr)


state 118

   26 stat: K_IF PAREN_L expr PAREN_R nest_block .
   27     | K_IF PAREN_L expr PAREN_R nest_block . K_ELSE nest_block

    K_ELSE  shift, and go to state 124

    $default  reduce using rule 26 (stat)


state 119

   28 stat: K_WHILE PAREN_L expr PAREN_R nest_block .

    $default  reduce using rule 28 (stat)


state 120

   25 stat: lhs O_ASSIGN ID PAREN_L args . PAREN_R

    PAREN_R  shift, and go to state 125


state 121

   33 args: expr . more_args
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    COMMA       shift, and go to state 126

    $default  reduce using rule 36 (more_args)

    more_args  go to state 127


state 122

   21 decl: K_VAR vars ID COLON T_STR SQR_L expr . SQR_R
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    SQR_R       shift, and go to state 128


state 123

   53 expr: O_DEREF PAREN_L expr PAREN_R .

    $default  reduce using rule 53 (expr)


state 124

   27 stat: K_IF PAREN_L expr PAREN_R nest_block K_ELSE . nest_block

    CURLY_L  shift, and go to state 36

    nest_block  go to state 129


state 125

   25 stat: lhs O_ASSIGN ID PAREN_L args PAREN_R .

    $default  reduce using rule 25 (stat)


state 126

   35 more_args: COMMA . expr more_args

    K_NULL     shift, and go to state 56
    O_NOT      shift, and go to state 57
    O_ADDRESS  shift, and go to state 58
    O_DEREF    shift, and go to state 59
    L_BOOL     shift, and go to state 60
    L_CHAR     shift, and go to state 61
    L_INT      shift, and go to state 62
    L_STRING   shift, and go to state 63
    ID         shift, and go to state 64
    PIPE       shift, and go to state 65
    PAREN_L    shift, and go to state 66

    expr  go to state 130
    abs   go to state 68


state 127

   33 args: expr more_args .

    $default  reduce using rule 33 (args)


state 128

   21 decl: K_VAR vars ID COLON T_STR SQR_L expr SQR_R .

    $default  reduce using rule 21 (decl)


state 129

   27 stat: K_IF PAREN_L expr PAREN_R nest_block K_ELSE nest_block .

    $default  reduce using rule 27 (stat)


state 130

   35 more_args: COMMA expr . more_args
   39 expr: expr . O_OR expr
   40     | expr . O_AND expr
   41     | expr . O_EQUAL expr
   42     | expr . O_NEQUAL expr
   43     | expr . O_SUBTRACT expr
   44     | expr . O_ADD expr
   45     | expr . O_MULTIPLY expr
   46     | expr . O_DIVIDE expr
   47     | expr . O_GT expr
   48     | expr . O_GTE expr
   49     | expr . O_LT expr
   50     | expr . O_LTE expr

    O_AND       shift, and go to state 84
    O_DIVIDE    shift, and go to state 85
    O_EQUAL     shift, and go to state 86
    O_GT        shift, and go to state 87
    O_GTE       shift, and go to state 88
    O_LT        shift, and go to state 89
    O_LTE       shift, and go to state 90
    O_SUBTRACT  shift, and go to state 91
    O_NEQUAL    shift, and go to state 92
    O_OR        shift, and go to state 93
    O_ADD       shift, and go to state 94
    O_MULTIPLY  shift, and go to state 95
    COMMA       shift, and go to state 126

    $default  reduce using rule 36 (more_args)

    more_args  go to state 131


state 131

   35 more_args: COMMA expr more_args .

    $default  reduce using rule 35 (more_args)
